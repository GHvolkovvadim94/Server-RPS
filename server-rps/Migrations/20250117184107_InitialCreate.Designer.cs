// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server_rps.Data;

#nullable disable

namespace server_rps.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250117184107_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("server_rps.Models.Match", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player1Choice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Player1Health")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player1Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Player1Ready")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player2Choice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Player2Health")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player2Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Player2Ready")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("server_rps.Models.MatchHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Player1Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Player2Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rounds")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WinnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MatchHistories");
                });

            modelBuilder.Entity("server_rps.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Draws")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Losses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayedMatches")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
